{"version":3,"sources":["Components/Form/Form.module.css","Components/ContactsList/Contact.module.css","Components/App/App.module.css","redux/contacts/contactsAction.js","redux/contacts/contactsReducer.js","redux/contacts/contactsStore.js","redux/service/contacnts-API.js","Components/Form/Form.js","redux/contacts/contactsOperations.js","Components/Filter/Filter.js","Components/ContactsList/ContactListItem.js","redux/contacts/contacts-selectors.js","Components/ContactsList/ContactsList.js","Components/App/App.js","index.js"],"names":["module","exports","addContacts","createAction","setContacts","fetchRequest","fetchError","addFilter","deleteContact","contactList","createReducer","items","loading","error","action","state","payload","filter","contact","id","_","combineReducers","middleware","getDefaultMiddleware","rootReducer","contacts","contactReducer","store","configureStore","reducer","devTools","process","getContacts","a","axios","get","data","postContacts","query","post","delete","Form","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChangeInput","event","target","value","className","styles","form","onSubmit","e","preventDefault","uuidv4","newContact","inContact","find","toLowerCase","alert","actions","fetchAPI","result","item","input","type","pattern","title","required","onChange","button","Filter","ContactListItem","onClickRemove","onClick","ContactsList","contactLoad","contactError","useEffect","filterContact","includes","length","list","map","App","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bb0abd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1vB5f\",\"item\":\"Form_item__3Gz9x\",\"button\":\"Form_button__2ulIb\",\"input\":\"Form_input__Abg5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contact_list__3StlK\",\"items\":\"Contact_items__3MmKR\",\"item\":\"Contact_item__TO8Ld\",\"button\":\"Contact_button__1EnoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__24HZj\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContacts = createAction(\"addContacts\");\nexport const setContacts = createAction(\"setContacts\");\nexport const fetchRequest = createAction(\"fetchStartRequest\");\nexport const fetchSuccess = createAction(\"fetchSuccess\");\nexport const fetchError = createAction(\"fetchError\");\nexport const addFilter = createAction(\"addFilter\");\nexport const deleteContact = createAction(\"deleteContact\");\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport * as action from \"./contactsAction\";\n\nconst initialState = {\n  items: [],\n  loading: false,\n  error: \"\",\n};\n\nconst contactList = createReducer(initialState, {\n  [action.addContacts]: (state, { payload }) => ({\n    ...state,\n    items: [payload, ...state.items],\n  }),\n  [action.setContacts]: (state, { payload }) => ({\n    ...state,\n    items: [...payload],\n  }),\n  [action.deleteContact]: (state, { payload }) => ({\n    ...state,\n    items: [...state.items.filter((contact) => contact.id !== payload)],\n  }),\n  [action.fetchRequest]: (state, { payload }) => ({\n    ...state,\n    loading: payload,\n  }),\n\n  [action.fetchError]: (state, { payload }) => ({\n    ...state,\n    error: payload,\n  }),\n});\n\nconst filter = createReducer(\"\", {\n  [action.addFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contactList,\n  filter,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport contactReducer from \"./contactsReducer\";\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import axios from \"axios\";\n\nexport const getContacts = async () => {\n  const { data } = await axios.get(\"http://localhost:7777/contacts\");\n  return data;\n};\n\nexport const postContacts = async (query) => {\n  const { data } = await axios.post(\"http://localhost:7777/contacts\", query);\n  return data;\n};\n\nexport const deleteContact = async (id) => {\n  const { data } = await axios.delete(`http://localhost:7777/contacts/${id}`);\n  return data;\n};\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport * as actions from \"../../redux/contacts/contactsOperations\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport styles from \"./Form.module.css\";\n\nconst Form = () => {\n  const { contactList } = useSelector((state) => state.contacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const handleChangeInput = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetInput = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleAddContact = (e) => {\n    e.preventDefault();\n    const id = uuidv4();\n    const newContact = { name, number, id };\n    const inContact = contactList.items.find(\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (inContact) {\n      alert(`${inContact.name}  is already in contacts!`);\n      return;\n    }\n    dispatch(actions.postContactOperation(newContact));\n    resetInput();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleAddContact}>\n      <label className={styles.item}>\n        <p>Name</p>\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeInput}\n        />\n        <p>Number</p>\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeInput}\n        />\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </label>\n    </form>\n  );\n};\n\nexport default Form;\n","import * as fetchAPI from \"../service/contacnts-API\";\nimport * as actions from \"./contactsAction\";\n\nexport const getContactOperation = () => async (dispatch) => {\n  dispatch(actions.fetchRequest(true));\n  try {\n    const result = await fetchAPI.getContacts();\n    dispatch(actions.setContacts(result));\n  } catch (error) {\n    dispatch(actions.fetchError(error));\n  } finally {\n    dispatch(actions.fetchRequest(false));\n  }\n};\n\nexport const postContactOperation = (contact) => async (dispatch) => {\n  dispatch(actions.fetchRequest(true));\n  try {\n    const result = await fetchAPI.postContacts(contact);\n    dispatch(actions.addContacts(result));\n  } catch (error) {\n    dispatch(actions.fetchError(error));\n  } finally {\n    dispatch(actions.fetchRequest(false));\n  }\n};\n\nexport const deleteContactOperation = (id) => async (dispatch) => {\n  dispatch(actions.fetchRequest(true));\n  try {\n    await fetchAPI.deleteContact(id);\n    dispatch(actions.deleteContact(id));\n  } catch (error) {\n    dispatch(actions.fetchError(error));\n  } finally {\n    dispatch(actions.fetchRequest(false));\n  }\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/contacts/contactsAction\";\n\nimport styles from \"../Form/Form.module.css\";\n\nconst Filter = () => {\n  const filter = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={(query) => dispatch(actions.addFilter(query.target.value))}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/contacts/contactsOperations\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Contact.module.css\";\nconst ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const onClickRemove = (id) => {\n    dispatch(actions.deleteContactOperation(id));\n  };\n\n  return (\n    <li className={styles.items}>\n      <p className={styles.item}>{name}:</p>\n      <p className={styles.item}>{number}</p>\n      <button className={styles.button} onClick={() => onClickRemove(id)}>\n        X\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","// import { createSelector } from \"reselect\";\n\nexport const contactList = (state) => state.contacts.contactList.items;\nexport const contactLoad = (state) => state.contacts.contactList.loading;\nexport const contactError = (state) => state.contacts.contactList.error;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport ContactListItem from \"./ContactListItem\";\nimport { getContactOperation } from \"../../redux/contacts/contactsOperations\";\nimport {\n  contactList,\n  contactLoad,\n  contactError,\n} from \"../../redux/contacts/contacts-selectors\";\nimport styles from \"./Contact.module.css\";\n\nconst ContactsList = () => {\n  const items = useSelector((state) => contactList(state));\n  const loading = useSelector((state) => contactLoad(state));\n  const error = useSelector((state) => contactError(state));\n  const { filter } = useSelector((state) => state.contacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContactOperation());\n  }, [dispatch]);\n\n  if (loading) {\n    return <h1>...Loading</h1>;\n  }\n\n  if (error) {\n    return <h1>{contactList.error}</h1>;\n  }\n\n  const filterContact = items.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    items.length > 0 && (\n      <ul className={styles.list}>\n        {filterContact.map(({ id, name, number }) => (\n          <ContactListItem key={id} id={id} name={name} number={number} />\n        ))}\n      </ul>\n    )\n  );\n};\n\nexport default ContactsList;\n","import React from \"react\";\nimport Form from \"../Form\";\nimport Filter from \"../Filter\";\nimport ContactsList from \"../ContactsList\";\nimport styles from \"./App.module.css\";\n\nconst App = () => {\n  return (\n    <div className={styles.container}>\n      <h2>Phonebook</h2>\n      <Form />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport store from \"./redux/contacts/contactsStore\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}